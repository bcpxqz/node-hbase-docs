{"data":{"page":{"html":"<h1 id=\"developer-guide\"><a href=\"#developer-guide\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Developer Guide</h1>\n<div class=\"toc\">\n<h2><a href=\"#toc\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Table of Contents</h2>\n<ul>\n<li><a href=\"#introduction\">Introduction</a></li>\n<li><a href=\"#running-the-tests\">Running the tests</a></li>\n</ul>\n</div>\n<h2 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>From this website documentation, we recommend to start by reading the <a href=\"./Getting%20started\">Getting Started</a> instruction. Once you get an overall understand of how to install and use the library, you shall pursue by reading the various API pages for an in-depth description of the various available functionalities.</p>\n<p>If the examples present on the documentation doesn't cover your questions, you are highly encouraged to read the <a href=\"https://github.com/adaltas/node-hbase/tree/master/test\">tests</a>. They cover all the API. There are highly expressive and you shouldn't fear reading them.</p>\n<p>If the tests don't cover your need, for example in case of a new filter, or if you believe the documentation deserve additional examples, feel free to <a href=\"https://github.com/adaltas/node-hbase/issues\">open an issue</a>.</p>\n<h2 id=\"running-the-tests\"><a href=\"#running-the-tests\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running the tests</h2>\n<p>Tests are executed with <a href=\"https://mochajs.org/\">Mocha</a>. They reference a configuration module at \"./test/properties\". The format can be in JavaScript, CoffeeScript or JSON. You can use any of the \"./test/properties.*.coffee\" examples as a starting point and make the\nappropriate changes.</p>\n<p>If using the HDP sandbox, start the virtual machine, log-in as \"root\", start\nAmbari <code class=\"language-text\">start_ambari.sh</code>, start HBase <code class=\"language-text\">start_hbase.sh</code> and start the HBase REST\nserver <code class=\"language-text\">/usr/lib/hbase/bin/hbase rest -p 60080</code>.</p>\n<p>Otherwise you can run HBase in locally with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Start the Docker image</span>\ndocker run --name stargate --rm -p 60080:8080 sixeyed/hbase-stargate\n<span class=\"token comment\"># Or</span>\ndocker run --name stargate -p 2181:2181 -p 60010:60010 -p 60000:60000 -p 60020:60020 -p 60030:60030 -p 60080:8080 -p 8085:8085 sixeyed/hbase-stargate</code></pre></div>\n<p>Note, the current HBase image from sixeyed and are currently based on the CentOS:6 image which is incompatible with the latest kernels. Here is how to build your own new image:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Build the base image</span>\ndocker build -t fork-hbase docker/hbase-1.1.2\n<span class=\"token comment\"># Build the REST image</span>\ndocker build -t fork-hbase-rest docker/hbase-rest\n<span class=\"token comment\"># Run the REST image</span>\ndocker run --name stargate --rm -p 60080:8080 fork-hbase-rest</code></pre></div>\n<p>Or with the REST server behind a reverse proxy:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Build the base image</span>\ndocker build -t fork-hbase docker/hbase-1.1.2\n<span class=\"token comment\"># Build the REST image</span>\ndocker build -t fork-hbase-rest docker/hbase-rest\n<span class=\"token comment\"># Build the REST image behind a reverse proxy</span>\ndocker build -t fork-hbase-rest-reverse-proxy docker/hbase-rest-reverse-proxy\n<span class=\"token comment\"># Run the REST image</span>\ndocker run --name stargate --rm -p 60080:8100 fork-hbase-rest-reverse-proxy</code></pre></div>\n<p>To run the tests:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">test</span></code></pre></div>\n<p>There is also a Dockerfile under <code class=\"language-text\">hbase-rest-reverse-proxy/</code> that creates an Nginx reverse proxy to HBase REST. This image can be used to test cases where the REST service runs behind a proxy. The file <code class=\"language-text\">test/properties_with_path.docker.coffee</code> can be used to test scenarios where HBase REST is accessible through a custom path (<code class=\"language-text\">/rest</code>).</p>\n<p>When testing against HBase secured with Kerberos, you must create a table with\nthe right ownership.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kinit hbase\nhbase shell\ncreate <span class=\"token string\">'node_table'</span>, <span class=\"token punctuation\">{</span>NAME <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'node_column_family'</span>, VERSIONS <span class=\"token operator\">=</span><span class=\"token operator\">></span> 5<span class=\"token punctuation\">}</span>\ngrant <span class=\"token string\">'ryba'</span>, <span class=\"token string\">'RWC'</span>, <span class=\"token string\">'node_table'</span></code></pre></div>\n<p>You can use the example located in \"test/properties.json.krb5\" to configure the\ntest. It comes pre-configured for [Ryba] configured in development cluster mode.</p>","frontmatter":{"title":"Developer Guide","description":"How to contribute to the project","keywords":"contribute, git, github, open source, documentation, versioning, pull requests, bug, issues"},"fields":{"edit_url":"https://github.com/adaltas/node-hbase-docs/edit/master/src/md/learn/developer.md"}}},"pageContext":{}}